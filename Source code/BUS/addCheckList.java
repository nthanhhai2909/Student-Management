/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package BUS;

import DAO.AccountDAO;
import DAO.InformationaccountDAO;
import DAO.StudentDAO;
import DAO.SubjectDAO;
import POJO.Account;
import POJO.Informationaccount;
import POJO.Studentofsubject;
import POJO.StudentofsubjectId;
import POJO.Subject;
import java.awt.GridLayout;
import java.sql.Array;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javafx.scene.control.CheckBox;
import javax.swing.DefaultListModel;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.ListModel;

/**
 *
 * @author nthan
 */
public class addCheckList extends javax.swing.JPanel  {

    /** Creates new form addCheckList */
    public List<Account> listIsSelected = new ArrayList<Account>();
    public List<Account> listAcc;
    public JCheckBoxList checkBoxList;
    public String IDSubject;
    public addCheckList() {
        initComponents();
        setListAccount();
        InitlistSubject();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    public void setListAccount(){
        listAcc = AccountDAO.getListAccount();
        DefaultListModel<JCheckBox> model = new DefaultListModel<JCheckBox>();
        for(int i = 0; i<listAcc.size(); i++){
            if(listAcc.get(i).getType() == 1)
                break;
            String temp = "";
            Informationaccount infor = InformationaccountDAO.getInformationAccountByUserName(listAcc.get(i).getUserName());
            if(infor != null){
                temp = listAcc.get(i).getUserName() + " - " + infor.getName();
              
            }
            else{
                 temp = listAcc.get(i).getUserName() + " - " + "No name";
            }
            model.addElement(new JCheckBox(temp));
        }
        checkBoxList = new JCheckBoxList(model);
        checkBoxList.setSize(500, 500);
        pn_studentlist.add(checkBoxList);
        this.setVisible(true);

    }
        // Init cbListSubject
    public void InitlistSubject(){
        List<Subject> list = SubjectDAO.getListSubjet();
        if(list.size() == 0){
            cb_subject.setSelectedItem("No Subject");
            return;
        }
        for(int i = 0; i < list.size(); i++){
            cb_subject.addItem(list.get(i).getId() + " - "  + list.get(i).getName());
        }
    }
    
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        jLabel3 = new javax.swing.JLabel();
        text_search = new javax.swing.JTextField();
        pn_studentlist = new javax.swing.JPanel();
        btn_OK = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        cb_subject = new javax.swing.JComboBox<>();

        jLabel3.setText("Search");

        text_search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                text_searchKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout pn_studentlistLayout = new javax.swing.GroupLayout(pn_studentlist);
        pn_studentlist.setLayout(pn_studentlistLayout);
        pn_studentlistLayout.setHorizontalGroup(
            pn_studentlistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 537, Short.MAX_VALUE)
        );
        pn_studentlistLayout.setVerticalGroup(
            pn_studentlistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 265, Short.MAX_VALUE)
        );

        btn_OK.setText("OK");
        btn_OK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_OKActionPerformed(evt);
            }
        });

        jLabel1.setText("Subject");

        cb_subject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_subjectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(text_search, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(cb_subject, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(pn_studentlist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(264, 264, 264)
                        .addComponent(btn_OK)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(text_search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1)
                    .addComponent(cb_subject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pn_studentlist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(btn_OK)
                .addContainerGap(46, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btn_OKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_OKActionPerformed

        int[] listCheck = checkBoxList.getCheckedIndices();
        
        String[] IDsubject = this.IDSubject.split(" ", 2);
//        System.out.println(IDsubject[0]);
        POJO.Subject subject = SubjectDAO.getInformationSubjectByID(IDsubject[0]);
        if(subject == null)
            return;
        
        for(int i = 0; i< listCheck.length; i++){
            Account account = null;
            StudentofsubjectId sbId = null;
            try{
                account = AccountDAO.getInformationAccount(listAcc.get(listCheck[i]).getUserName());
                System.out.println(account.getUserName());    
                sbId =  new StudentofsubjectId(subject.getId(), account.getUserName());
            }
            catch(Exception e){
                System.out.println("fail");
            }
            Studentofsubject studentOfSubject = new Studentofsubject(sbId, account,subject,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);
            StudentDAO.addStudentOfSubject(studentOfSubject);
        }
    
    }//GEN-LAST:event_btn_OKActionPerformed

    private void cb_subjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_subjectActionPerformed
        IDSubject = cb_subject.getSelectedItem().toString();
        
    }//GEN-LAST:event_cb_subjectActionPerformed

    private void text_searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_text_searchKeyReleased
        String Key = text_search.getText();
    }//GEN-LAST:event_text_searchKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_OK;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.JComboBox<String> cb_subject;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel pn_studentlist;
    private javax.swing.JTextField text_search;
    // End of variables declaration//GEN-END:variables


}
