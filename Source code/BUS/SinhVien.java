/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package BUS;
import DAO.AccountDAO;
import DAO.StudentDAO;
import DAO.SubjectDAO;
import DAO.TimetableOfSubjectDAO;
import POJO.Studentofsubject;
import POJO.Subject;
import POJO.Timetableofsubject;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.time.temporal.ChronoUnit;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author nthan
 */
public class SinhVien extends javax.swing.JFrame {

    /**
     * Creates new form SinhVien
     */
    public SinhVien() {
        initComponents();
        initcb_Subject();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    // Load list Subject of user - student
    public List<Studentofsubject>LoadListSubjectOfStudent(){
        List<Studentofsubject> listSubject = StudentDAO.getListStudentByUserName(Login.userNamelocal);
        return listSubject;
    }
    
    public void initcb_Subject(){
        List<Studentofsubject> listSubject = StudentDAO.getListStudentByUserName(Login.userNamelocal);
        if(listSubject.size() == 0){
            cb_subject.addItem("No Subject");
        }
        else{
            for(int i = 0; i < listSubject.size(); i++){
                Subject sub = SubjectDAO.getInformationSubjectByID(listSubject.get(i).getSubject().getId());
                
                cb_subject.addItem(listSubject.get(i).getSubject().getId() +
                        " - " + sub.getName());
            }
        }
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btn_rollUp = new javax.swing.JButton();
        btn_view = new javax.swing.JButton();
        cb_subject = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        table_view = new javax.swing.JTable();
        btn_infor = new javax.swing.JButton();
        btn_change = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        btn_login = new javax.swing.JButton();
        pn_area = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Subject");

        btn_rollUp.setText("Roll Up");
        btn_rollUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_rollUpActionPerformed(evt);
            }
        });

        btn_view.setText("View");
        btn_view.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_viewActionPerformed(evt);
            }
        });

        table_view.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Subject", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(table_view);
        if (table_view.getColumnModel().getColumnCount() > 0) {
            table_view.getColumnModel().getColumn(0).setPreferredWidth(200);
        }

        btn_infor.setText("Account information");
        btn_infor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_inforActionPerformed(evt);
            }
        });

        btn_change.setText("Change password");
        btn_change.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_changeActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("ACCOUNT");

        btn_login.setText("Logout");
        btn_login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_loginActionPerformed(evt);
            }
        });

        pn_area.setAutoscrolls(true);
        pn_area.setLayout(new java.awt.GridLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(btn_infor)
                        .addGap(188, 188, 188)
                        .addComponent(btn_change)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_login, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(cb_subject, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(111, 111, 111)
                                .addComponent(btn_rollUp, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 154, Short.MAX_VALUE)
                                .addComponent(btn_view, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(226, 226, 226)
                .addComponent(pn_area, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(btn_rollUp)
                    .addComponent(btn_view)
                    .addComponent(cb_subject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_login)
                    .addComponent(btn_change)
                    .addComponent(btn_infor))
                .addGap(18, 18, 18)
                .addComponent(pn_area, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_rollUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_rollUpActionPerformed
       
        int year = Calendar.getInstance().get(Calendar.YEAR);
        int month = Calendar.getInstance().get(Calendar.MONTH) + 1;
        int day = Calendar.getInstance().get(Calendar.DAY_OF_MONTH);
        int hour = Calendar.getInstance().get(Calendar.HOUR);
        int minute = Calendar.getInstance().get(Calendar.MINUTE);
        int dayOfWeek = Calendar.getInstance().get(Calendar.DAY_OF_WEEK);
        String[] temp = cb_subject.getSelectedItem().toString().split(" ", 2);
        String iDSubject = temp[0];
        Timetableofsubject timetableofSub = 
            TimetableOfSubjectDAO.getInformationTimeTableByIDSubject(iDSubject);
        int DayB;
        int MonthB;
        int YearB;
        int DayT;
        int MonthT;
        int YearT;
        
        Date sDate = timetableofSub.getDayStart();
        temp = sDate.toString().split("-", 3);
        YearB = Integer.parseInt(temp[0]);
        MonthB = Integer.parseInt(temp[1]);
        DayB = Integer.parseInt(temp[2]);
       
        
        Date eDate = timetableofSub.getDayEnd();
        temp = eDate.toString().split("-", 3);
        YearT = Integer.parseInt(temp[0]);
        MonthT = Integer.parseInt(temp[1]);
        DayT = Integer.parseInt(temp[2]);
        
        int InterDayWeek = -1;
        String weekDays = timetableofSub.getWeekDays();
        switch(weekDays){
            case "Monday":     
                InterDayWeek = 2;
                  break;
            case "Tuesday":
                InterDayWeek = 3;
                break;
            case "Wednesday":
                InterDayWeek = 4;
                break;
            case "Thursday":
                InterDayWeek = 5;
                break;
            case "Friday":
                InterDayWeek = 6;
                break;
            case "Saturday":
                InterDayWeek = 7;
                break;
            case  "Sunday":
                InterDayWeek = 1;
                break;       
        }
        

        
        temp = timetableofSub.getHourStart().split(" ", 3);
        int sHour = Integer.parseInt(temp[0]);
        int sMinute = Integer.parseInt(temp[2]);
        
        
        temp = timetableofSub.getHourEnd().split(" ", 3);
        int eHour = Integer.parseInt(temp[0]);
        int eMinute = Integer.parseInt(temp[2]);
            
        
        final DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        final LocalDate firstDate = LocalDate.parse(sDate.toString(), formatter);
        Calendar cal = Calendar.getInstance();
        cal.set(Calendar.YEAR, year);
        cal.set(Calendar.MONTH, month - 1);  
        cal.set(Calendar.DAY_OF_MONTH, day);
        Date timeNow = cal.getTime();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        final LocalDate secondDate = LocalDate.parse(sdf.format(timeNow).toString(),
                formatter);
        long WeekRoll = ChronoUnit.DAYS.between(firstDate, secondDate)/7 + 1;
        Studentofsubject studentOfSubject = null;
        studentOfSubject = StudentDAO.getInforStudentOfSubjectByUserNameIdSubject(
                        iDSubject, Login.userNamelocal);
       if(checklogicDatetime(DayB, MonthB, YearB, day, month, year) == true &&
              checklogicDatetime(day, month, year, DayT, MonthT, YearT) == true){
           
           if(InterDayWeek == dayOfWeek){
               if(checkLogicHourTime(sHour, sMinute, hour, minute) == true &&
                       checkLogicHourTime(hour, minute, eHour, eMinute) == true){
                   if(WeekRoll == 1){
                       studentOfSubject.setIdtuan1(1);
                   }
                   if(WeekRoll == 2){
                       studentOfSubject.setIdtuan2(1);
                   }
                   if(WeekRoll == 3){
                       studentOfSubject.setIdtuan3(1);
                   }
                   if(WeekRoll == 4){
                       studentOfSubject.setIdtuan4(1);
                   }
                   if(WeekRoll == 5){
                       studentOfSubject.setIdtuan5(1);
                   }
                   if(WeekRoll == 6){
                       studentOfSubject.setIdtuan6(1);
                   }
                   if(WeekRoll == 7){
                       studentOfSubject.setIdtuan7(1);
                   }
                   if(WeekRoll == 8){
                       studentOfSubject.setIdtuan8(1);
                   }
                   if(WeekRoll == 9){
                       studentOfSubject.setIdtuan9(1);
                   }
                   if(WeekRoll == 10){
                       studentOfSubject.setIdtuan10(1);
                   }
                   if(WeekRoll == 11){
                       studentOfSubject.setIdtuan11(1);
                   }
                   if(WeekRoll == 12){
                       studentOfSubject.setIdtuan12(1);
                   }
                   if(WeekRoll == 13){
                       studentOfSubject.setIdtuan13(1);
                   }
                   if(WeekRoll == 14){
                       studentOfSubject.setIdtuan14(1);
                   }
                   if(WeekRoll == 15){
                       studentOfSubject.setIdtuan15(1);
                   }
                   JOptionPane.showMessageDialog(new JFrame(), "SUCCESS",
                    "Notification",JOptionPane.PLAIN_MESSAGE);
               }
               else{
                   JOptionPane.showMessageDialog(new JFrame(), "FALSE",
                    "Notification",JOptionPane.PLAIN_MESSAGE);
               }
           }
           else{
                   JOptionPane.showMessageDialog(new JFrame(), "FALSE",
                    "Notification",JOptionPane.PLAIN_MESSAGE);
               }
       }
        else{
            JOptionPane.showMessageDialog(new JFrame(), "FALSE",
             "Notification",JOptionPane.PLAIN_MESSAGE);
        }
        StudentDAO.updateStudentOfSubject(studentOfSubject);
        
        
        
    }//GEN-LAST:event_btn_rollUpActionPerformed

    private void btn_viewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_viewActionPerformed
        String[] temp = cb_subject.getSelectedItem().toString().split(" ", 2);
        String iDSubject = temp[0];
        Timetableofsubject timetableofSub = 
            TimetableOfSubjectDAO.getInformationTimeTableByIDSubject(iDSubject);
        Studentofsubject studentOfSubject = null;
        studentOfSubject = StudentDAO.getInforStudentOfSubjectByUserNameIdSubject(
                        iDSubject, Login.userNamelocal);
        DefaultTableModel model = (DefaultTableModel) table_view.getModel();
        if(timetableofSub == null){
            JOptionPane.showMessageDialog(new JFrame(), "TimeTable Null",
                    "Notification",JOptionPane.PLAIN_MESSAGE);
        }
        int year = Calendar.getInstance().get(Calendar.YEAR);
        int month = Calendar.getInstance().get(Calendar.MONTH) + 1;
        int day = Calendar.getInstance().get(Calendar.DAY_OF_MONTH);
        int hour = Calendar.getInstance().get(Calendar.HOUR);
        int minute = Calendar.getInstance().get(Calendar.MINUTE);
        int dayOfWeek = Calendar.getInstance().get(Calendar.DAY_OF_WEEK);
        
        Date sDate = timetableofSub.getDayStart();
        temp = sDate.toString().split("-", 3);
        int YearB = Integer.parseInt(temp[0]);
        int MonthB = Integer.parseInt(temp[1]);
        int DayB = Integer.parseInt(temp[2]);
        
        final DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        final LocalDate firstDate = LocalDate.parse(sDate.toString(), formatter);
        Calendar cal = Calendar.getInstance();
        cal.set(Calendar.YEAR, year);
        cal.set(Calendar.MONTH, month - 1);  
        cal.set(Calendar.DAY_OF_MONTH, day);
        Date timeNow = cal.getTime();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        final LocalDate secondDate = LocalDate.parse(sdf.format(timeNow).toString(),
                formatter);
        long WeekRoll = ChronoUnit.DAYS.between(firstDate, secondDate)/7 + 1;
        
        
        String week1="";
        String week2= "";
        String week3 ="";
        String week4= "";
        String week5="";
        String week6="";
        String week7="";
        String week8="";
        String week9="";
        String week10="";
        String week11="";
        String week12="";
        String week13="";
        String week14="";
        String week15="";
        
        int InterDayWeek = -1;
        String weekDays = timetableofSub.getWeekDays();
        switch(weekDays){
            case "Monday":     
                InterDayWeek = 2;
                  break;
            case "Tuesday":
                InterDayWeek = 3;
                break;
            case "Wednesday":
                InterDayWeek = 4;
                break;
            case "Thursday":
                InterDayWeek = 5;
                break;
            case "Friday":
                InterDayWeek = 6;
                break;
            case "Saturday":
                InterDayWeek = 7;
                break;
            case  "Sunday":
                InterDayWeek = 1;
                break;       
        }
        System.out.println(studentOfSubject.getIdtuan1());
        // Set Week1
        if(studentOfSubject.getIdtuan1() == 1){
            week1 = "yes";
            System.out.println(week1);
        }
        else{
            if(WeekRoll > 1){
                week1 = "no";
            }
            else if(WeekRoll < 1){
                week1 = "null";
            }
            else if(WeekRoll == 1){
                if(dayOfWeek > InterDayWeek){
                    week1 = "null";
                }
                else{
                    week1 = "no";
                }
            }      
        }
        // Set week 2
        if(studentOfSubject.getIdtuan2()== 1){
            week2 = "yes";
        }
        else{
            if(WeekRoll > 2){
                week2 = "no";
            }
            else if(WeekRoll < 2){
                week1 = "null";
            }
            else if(WeekRoll == 2){
                if(dayOfWeek > InterDayWeek){
                    week2 = "null";
                }
                else{
                    week2 = "no";
                }
            } 
        }
        // Set Week 3
        if(studentOfSubject.getIdtuan3()== 1){
            week3 = "yes";
        }
        else{
            if(WeekRoll > 3){
                week3 = "no";
            }
            else if(WeekRoll < 3){
                week3 = "null";
            }
            else if(WeekRoll == 3){
                if(dayOfWeek > InterDayWeek){
                    week3 = "null";
                }
                else{
                    week3 = "no";
                }
            } 
        }
        // Set week 4
        if(studentOfSubject.getIdtuan4()== 1){
            week4 = "yes";
        }
        else{
            if(WeekRoll > 4){
                week4 = "no";
            }
            else if(WeekRoll < 4){
                week4 = "null";
            }
            else if(WeekRoll == 4){
                if(dayOfWeek > InterDayWeek){
                    week4 = "null";
                }
                else{
                    week4 = "no";
                }
            }
        }
        // Set week 5
        if(studentOfSubject.getIdtuan5()== 1){
            week5 = "yes";
        }
        else{
            if(WeekRoll > 5){
                week5 = "no";
            }
            else if(WeekRoll < 5){
                week5 = "null";
            }
            else if(WeekRoll == 5){
                if(dayOfWeek > InterDayWeek){
                    week5 = "null";
                }
                else{
                    week5 = "no";
                }
            }
        }
        // Set week 6
        if(studentOfSubject.getIdtuan6()== 1){
            week6 = "yes";
        }
        else{
            if(WeekRoll > 6){
                week6 = "no";
            }
            else if(WeekRoll < 6){
                week6 = "null";
            }
            else if(WeekRoll == 6){
                if(dayOfWeek > InterDayWeek){
                    week6 = "null";
                }
                else{
                    week6 = "no";
                }
            }
        }
        // Set week 7
        if(studentOfSubject.getIdtuan7()== 1){
            week7 = "yes";
        }
        else{
            if(WeekRoll > 7){
                week7 = "no";
            }
            else if(WeekRoll < 7){
                week7 = "null";
            }
            else if(WeekRoll == 7){
                if(dayOfWeek > InterDayWeek){
                    week7 = "null";
                }
                else{
                    week7 = "no";
                }
            }
        }
        // Set week 8
        if(studentOfSubject.getIdtuan8()== 1){
            week8 = "yes";
        }
        else{
            if(WeekRoll > 8){
                week8 = "no";
            }
            else if(WeekRoll < 8){
                week8 = "null";
            }
            else if(WeekRoll == 8){
                if(dayOfWeek > InterDayWeek){
                    week8 = "null";
                }
                else{
                    week8 = "no";
                }
            }
        }
        //Set week 9
        if(studentOfSubject.getIdtuan9()== 1){
            week9 = "yes";
        }
        else{
            if(WeekRoll > 9){
                week9 = "no";
            }
            else if(WeekRoll < 9){
                week9 = "null";
            }
            else if(WeekRoll == 9){
                if(dayOfWeek > InterDayWeek){
                    week9 = "null";
                }
                else{
                    week9 = "no";
                }
            }
        }
        // Set week 10
        if(studentOfSubject.getIdtuan10()== 1){
            week10 = "yes";
        }
        else{
            if(WeekRoll > 10){
                week10 = "no";
            }
            else if(WeekRoll < 10){
                week10 = "null";
            }
            else if(WeekRoll == 10){
                if(dayOfWeek > InterDayWeek){
                    week10 = "null";
                }
                else{
                    week10 = "no";
                }
            }
        }
        // Set week 11
        if(studentOfSubject.getIdtuan11()== 1){
            week11 ="yes";
        }
        else{
            if(WeekRoll > 11){
                week11 = "no";
            }
            else if(WeekRoll < 11){
                week11 = "null";
            }
            else if(WeekRoll == 11){
                if(dayOfWeek > InterDayWeek){
                    week11 = "null";
                }
                else{
                    week11 = "no";
                }
            }
        }
        // Set week 12
        if(studentOfSubject.getIdtuan12()== 1){
            week12 ="yes";
        }
        else{
            if(WeekRoll > 12){
                week12 = "no";
            }
            else if(WeekRoll < 12){
                week12 = "null";
            }
            else if(WeekRoll == 12){
                if(dayOfWeek > InterDayWeek){
                    week12 = "null";
                }
                else{
                    week12 = "no";
                }
            }
        }
        // Set week 13
        if(studentOfSubject.getIdtuan13()== 1){
            week13 ="yes";
        }
        else{
            if(WeekRoll > 13){
                week13 = "no";
            }
            else if(WeekRoll < 13){
                week13 = "null";
            }
            else if(WeekRoll == 13){
                if(dayOfWeek > InterDayWeek){
                    week13 = "null";
                }
                else{
                    week13 = "no";
                }
            }
        }
        // Set week 14
        if(studentOfSubject.getIdtuan14()== 1){
            week14 ="yes";
        }
        else{
            if(WeekRoll > 14){
                week14 = "no";
            }
            else if(WeekRoll < 14){
                week14 = "null";
            }
            else if(WeekRoll == 14){
                if(dayOfWeek > InterDayWeek){
                    week14 = "null";
                }
                else{
                    week14 = "no";
                }
            }
        }
        // Set week 15
        if(studentOfSubject.getIdtuan15()== 1){
            week15 ="yes";
        }
        else{
            if(WeekRoll > 15){
                week15 = "no";
            }
            else if(WeekRoll < 15){
                week15 = "null";
            }
            else if(WeekRoll == 15){
                if(dayOfWeek > InterDayWeek){
                    week15 = "null";
                }
                else{
                    week15 = "no";
                }
            }
        }
        Subject subject = SubjectDAO.getInformationSubjectByID(iDSubject);
        String test = String.valueOf(iDSubject) + " - " + subject.getName();
        System.out.println(test);
        model.addRow(new Object[]{test,week1,week2,week3,
        week4,week5,week6,week7,week8,week9,week10,week11,week12,
        week13,week14,week15});
        table_view.setVisible(true);

    }//GEN-LAST:event_btn_viewActionPerformed

    private void btn_inforActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_inforActionPerformed
        pn_area.removeAll();
        pn_area.add(new AccountInfor());
        setVisible(true);
        
    }//GEN-LAST:event_btn_inforActionPerformed

    private void btn_loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_loginActionPerformed
        new Login().setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_btn_loginActionPerformed

    private void btn_changeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_changeActionPerformed
        Login temp = new Login();
        temp.createChangePass();
        temp.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_btn_changeActionPerformed

        // Check logicDay
    public boolean checklogicDatetime(int dayB, int monthB, int yearB, int dayT, int monthT, int yearT){
        if(yearT > yearB)
            return true;
        if(yearB == yearT){
            if(monthT > monthB)
                return true;
            if(monthB == monthT){
                if(dayT > dayB)
                    return true;
            }
        }
        return false;
    }
    // Check logic Hourtime
    public boolean checkLogicHourTime(int hourB, int minuteB, int hourT, int minuteT){
        if(hourT > hourB)
            return true;
        if(hourT == hourB){
            if(minuteT > minuteB)
                return true;
        }
        return false;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_change;
    private javax.swing.JButton btn_infor;
    private javax.swing.JButton btn_login;
    private javax.swing.JButton btn_rollUp;
    private javax.swing.JButton btn_view;
    private javax.swing.JComboBox<String> cb_subject;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel pn_area;
    private javax.swing.JTable table_view;
    // End of variables declaration//GEN-END:variables
}
